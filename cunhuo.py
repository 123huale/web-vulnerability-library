import requests,argparse
requests.packages.urllib3.disable_warnings()
from multiprocessing import Pool

def banner():
    banner = """欢迎使用检测url存活脚本"""
    print(banner)

def poc(target):
    try:
        result = requests.get(url=target,verify=False,timeout=5)
        if result.status_code == 200:
            print(f"{target}存活")
            with open("live1_url.txt","a",encoding="utf-8")as f:
                f.write(f"{target}\n")
        elif result.status_code == 401:
            print(f"{target}需要认证")
            with open("认证.txt","a",encoding="utf-8")as f:
                f.write(f"{target}\n")
        else:
            print(f"{target}不存在")
    except Exception as e:
        pass

def main():
    banner()
    parser = argparse.ArgumentParser("检测url存活脚本")
    parser.add_argument("-f","--file",dest="file",type=str,help="指定存活url文件")
    args = parser.parse_args()
    if args.file:
        url_list = []
        with open(args.file,"r",encoding="utf-8")as f:
            for i in f.readlines():
                url_list.append(i.strip().replace("\n",""))
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print("请用-h查看说明")

if __name__ == '__main__':
    main()